#!/bin/bash

[ $# -lt 1 ] && display_help=true

while [[ $# -gt 0 ]]
do
    key="$1"

    case $key in
        -u|--udp)
            use_udp=true
            ;;
        -nm|--no-mdns)
            disable_mdns=true
            ;;
        -h|--help)
            display_help=true
            ;;
        *)
            DATA_SIZE=$key
        ;;
    esac
    shift
done

[ "$display_help" = true -o -z "$DATA_SIZE" ] && echo "Usage: $0 [--udp] [--no-mdns] <size in megabytes>" && exit

set -em

[ -z $IPFS_BIN ] && IPFS_BIN=ipfs

# Initialize the repo
export IPFS_PATH=ipfs_send
mkdir -p $IPFS_PATH
$IPFS_BIN init

# Modify ports to allow two ipfs instances on the same host
$IPFS_BIN config --json Addresses \
'{
   "Swarm": [ "/ip4/0.0.0.0/tcp/4002", "/ip6/::/tcp/4002" ],
   "API": "/ip4/127.0.0.1/tcp/5002",
   "Gateway": "/ip4/127.0.0.1/tcp/8082"
}'

# Modify the swarm addresses in case udp should be used
if [ "$use_udp" = true ] ; then
    $IPFS_BIN config --json Addresses.Swarm \
        '["/ip4/0.0.0.0/udp/4002/utp", "/ip6/::/udp/4002/utp"]'
fi

# Disable mdns discovery if needed
if [ "$disable_mdns" = true ] ; then
    $IPFS_BIN config Discovery.MDNS.Enabled false --json
fi

# Start the daemon
$IPFS_BIN daemon &
IPFS_PID=$!

trap "trap - SIGINT SIGTERM EXIT; \
      kill $IPFS_PID; \
      wait $IPFS_PID; \
      exit" SIGINT SIGTERM EXIT

# Wait for daemon to start
sleep 0.5
until $IPFS_BIN swarm peers >/dev/null 2>&1; do
	echo -n .
	sleep 0.5
done

# Make test data
echo "Generating test data..."
ref=$(dd if=/dev/urandom iflag=fullblock bs=1M count=$DATA_SIZE \
      | $IPFS_BIN add -q)

# Display addresses
$IPFS_BIN id -f="<addrs>\n"

# Wait for signal
echo "Sender started with $ref"
echo "Press ctrl-C to stop"

trap "trap - SIGINT SIGTERM EXIT; \
      kill $IPFS_PID; \
      wait $IPFS_PID;
      rm -r $IPFS_PATH" SIGINT SIGTERM EXIT
wait $IPFS_PID
